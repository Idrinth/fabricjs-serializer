var idrinth=idrinth||{};idrinth.FabricJsSerializer=(()=>{const t=["left","top","type"],r=(t,r)=>"string"==typeof r&&{}.hasOwnProperty.call(t,r),n=class{constructor(t,r){if("function"!=typeof t)throw new Error("The factory has to be a function.");if(!Array.isArray(r))throw new Error("The dependencies have to be an array.");this.t=t,this.r=r}isDependant(t){return this.r.includes(t)}isSaveworthy(n,i){const o=t=>Array.isArray(t)&&!t.length;return!!t.includes(n)||!r(this.t,n)||!((t,r)=>t===r||o(t)&&o(r))(i,this.t[n])}},i=t=>!!t.match(/^[A-Z]/u)&&"function"==typeof fabric[t]&&!!r(fabric[t].prototype,"type")&&"string"==typeof fabric[t].prototype.type;return class{constructor(t){this.n=t,this.i=(()=>{const t={radial:new n(fabric.Gradient,[])};for(const r of Object.keys(fabric))i(r)&&(t[fabric[r].prototype.type]=new n(fabric[r],[]));return t})()}register(t,r,...i){this.i[t]=new n(r,i||[])}fromJson(t){const n=JSON.parse(t),i=this.n.renderOnAddRemove;this.n.renderOnAddRemove=!1;for(const t of this.n._objects)this.n.remove(t);const o=this.i;n.objects.sort((t,n)=>{if(!r(o,t.type))throw new Error(`Can't find a definition for given type ${t.type}`);if(!r(o,n.type))throw new Error(`Can't find a definition for given type ${n.type}`);return o[t.type].isDependant(n.type)?1:o[n.type].isDependant(t.type)?-1:0});for(const t of n.objects)this.n.add(this.i[t.type].factory(t));this.n.renderOnAddRemove=i,this.n.renderAll()}toJson(){const t=this.i;return JSON.stringify({version:fabric.version,objects:this.n._objects.map(n=>{const i=n.toObject();if(!i.type||!r(t,i.type))throw new Error(`Can't find a definition for given type ${i.type}`);const o={};for(const r of Object.keys(i))t[i.type].isSaveworthy(r,i[r])&&(o[r]=i[r]);return o})})}}})();